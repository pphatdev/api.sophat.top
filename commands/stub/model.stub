import { client } from "../db/configs/mysql.config.js";
import { Response } from "../helpers/response-data.js";
import { Pagination } from "../helpers/paginations.js";

const response  = new Response()
const PAGE      = new Pagination()

export const getData = async ( request ) =>
{
    const { page, limit, search, sort } = request
    const count = await client.query(`SELECT count(id) from red_ant_express.[name]`)
    const total = count.rows[0].count || 0
    const query = PAGE.query({
        table: 'red_ant_express.[name]',
        selectColumns: ["*"],
        conditions: {
            operator: 'WHERE',
            value: ''
        },
        page: page,
        limit: limit,
        search: {
            column: [],
            value: search,
            operator: "or",
            withWere: true
        },
        sort: {
            column: [],
            value: sort
        },
    })

    return await client.query(query, []).then(
        result => {
            const data = {
                data: result.rows,
                count: total,
                show: result.rowCount
            }
            return data
        }
    ).catch(
        reason => console.log(reason)
    )
};


export const getDataDetail = async ( { id } ) =>
{
    return await client.query(
        `SELECT * from red_ant_express.[name] where id=$1`, [id]
    ).then(
        async result => {
            return response.success(
                result.rows
            );
        }
    ).catch(
        reason => console.log(reason)
    )
};


export const updateData = async ( request ) =>
{
    return await client.query(
        `UPDATE red_ant_express.[name] SET "name"=$1 WHERE id=$2;`,
        [name, id]
    ).then(
        result =>
        {
            if (result.rowCount < 0)
                return result
            return response.insetSuccess({ message: "Update Success." })
        }
    ).catch(
        reason =>
        {
            if (reason.code == "23505")
                return response.insetFailed({ message: reason.detail });

            console.log(reason)
            return reason
        }
    )
};